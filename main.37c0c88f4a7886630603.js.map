{"version":3,"sources":["webpack:///./js/task1.js","webpack:///./js/task2.js","webpack:///./js/task3.js","webpack:///./index.js"],"names":["task1","delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","task2","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","task3","makeTransaction","transaction","reject","min","max","Math","floor","random","id","logSuccess","res","logError","warn","amount","catch","refs","document","querySelector","addEventListener"],"mappings":"0HAiBeA,EAjBD,WACZ,IAAMC,EAAQ,SAAAC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQF,KACPA,OAIDI,EAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAGvBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,ICaJK,G,8BA3BD,WACZ,IAAMC,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,OAAO,IAAId,SAAQ,SAAAC,GACjBA,EACEY,EAASE,KAAI,SAAAC,GAAI,OACfA,EAAKN,OAASI,EAAd,iBAA8BE,EAA9B,CAAoCL,QAASK,EAAKL,SAAWK,UAM/Db,EAAS,SAAAc,GAAY,OAAIZ,QAAQa,MAAMD,IAK7CL,EAAgBH,EAAO,SAASF,KAAKJ,GACrCS,EAAgBH,EAAO,OAAOF,KAAKJ,KCgBtBgB,EAxCD,WACZ,IAIMC,EAAkB,SAAAC,GACtB,OAAO,IAAIrB,SAAQ,SAACC,EAASqB,GAC3B,IAN+BC,EAAKC,EAM9B1B,GANyByB,EAMS,IANJC,EAMS,IALxCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAOlDrB,YAAW,WACUuB,KAAKE,SAAW,GAGjC1B,EAAQ,CAAE2B,GAAIP,EAAYO,GAAI9B,UAE9BwB,EAAOD,EAAYO,MAEpB9B,OAID+B,EAAa,SAAAC,GACjBzB,QAAQC,IAAR,eAA2BwB,EAAIF,GAA/B,iBAAkDE,EAAIhC,MAAtD,OAGIiC,EAAW,SAAAH,GACfvB,QAAQ2B,KAAR,gCAA6CJ,EAA7C,8BAMFR,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,MAAO1B,KAAKsB,GAAYK,MAAMH,GAEhEX,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,MAAO1B,KAAKsB,GAAYK,MAAMH,GAEhEX,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,KAAM1B,KAAKsB,GAAYK,MAAMH,GAE/DX,EAAgB,CAAEQ,GAAI,GAAIK,OAAQ,MAAO1B,KAAKsB,GAAYK,MAAMH,IClC5DI,EAAO,CACXtC,MAAOuC,SAASC,cAAc,UAC9B7B,MAAO4B,SAASC,cAAc,UAC9BlB,MAAOiB,SAASC,cAAc,WAGhCF,EAAKtC,MAAMyC,iBAAiB,QAASzC,GACrCsC,EAAK3B,MAAM8B,iBAAiB,QAAS9B,GACrC2B,EAAKhB,MAAMmB,iBAAiB,QAASnB,K","file":"main.37c0c88f4a7886630603.js","sourcesContent":["const task1 = () => {\r\n  const delay = ms => {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(ms);\r\n      }, ms);\r\n    });\r\n  };\r\n\r\n  const logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n  // Вызовы функции для проверки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms\r\n};\r\n\r\nexport default task1;\r\n","const task2 = () => {\r\n  const users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n\r\n  const toggleUserState = (allUsers, userName) => {\r\n    return new Promise(resolve => {\r\n      resolve(\r\n        allUsers.map(user =>\r\n          user.name === userName ? { ...user, active: !user.active } : user,\r\n        ),\r\n      );\r\n    });\r\n  };\r\n\r\n  const logger = updatedUsers => console.table(updatedUsers);\r\n\r\n  /*\r\n   * Должно работать так\r\n   */\r\n  toggleUserState(users, 'Mango').then(logger);\r\n  toggleUserState(users, 'Lux').then(logger);\r\n};\r\n\r\nexport default task2;\r\n","const task3 = () => {\r\n  const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const makeTransaction = transaction => {\r\n    return new Promise((resolve, reject) => {\r\n      const delay = randomIntegerFromInterval(200, 500);\r\n\r\n      setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n\r\n        if (canProcess) {\r\n          resolve({ id: transaction.id, delay });\r\n        } else {\r\n          reject(transaction.id);\r\n        }\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  const logSuccess = res => {\r\n    console.log(`Transaction ${res.id} processed in ${res.delay}ms`);\r\n  };\r\n\r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n\r\n  /*\r\n   * Должно работать так\r\n   */\r\n  makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\n  makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n};\r\nexport default task3;\r\n","import task1 from './js/task1';\nimport task2 from './js/task2';\nimport task3 from './js/task3';\n\nconst refs = {\n  task1: document.querySelector('#task1'),\n  task2: document.querySelector('#task2'),\n  task3: document.querySelector('#task3'),\n};\n\nrefs.task1.addEventListener('click', task1);\nrefs.task2.addEventListener('click', task2);\nrefs.task3.addEventListener('click', task3);\n"],"sourceRoot":""}